BEGIN
COMMIT
DELETE FROM new_order WHERE NO_O_ID = $1 AND NO_D_ID = $2 AND NO_W_ID = $3
INSERT INTO history (H_C_D_ID, H_C_W_ID, H_C_ID, H_D_ID, H_W_ID, H_DATE, H_AMOUNT, H_DATA) VALUES ($1,$2,$3,$4,$5,$6,$7,$8)
INSERT INTO new_order (NO_O_ID, NO_D_ID, NO_W_ID) VALUES ( $1, $2, $3)
INSERT INTO oorder (O_ID, O_D_ID, O_W_ID, O_C_ID, O_ENTRY_D, O_OL_CNT, O_ALL_LOCAL) VALUES ($1, $2, $3, $4, $5, $6, $7)
INSERT INTO order_line (OL_O_ID, OL_D_ID, OL_W_ID, OL_NUMBER, OL_I_ID, OL_SUPPLY_W_ID, OL_QUANTITY, OL_AMOUNT, OL_DIST_INFO) VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9)
ROLLBACK
SELECT * FROM pg_stat_archiver
SELECT * FROM pg_stat_bgwriter
SELECT * FROM pg_stat_database
SELECT * FROM pg_stat_database_conflicts
SELECT * FROM pg_stat_user_indexes
SELECT * FROM pg_stat_user_tables
SELECT * FROM pg_statio_user_indexes
SELECT * FROM pg_statio_user_tables
SELECT COUNT(DISTINCT (S_I_ID)) AS STOCK_COUNT FROM order_line, stock WHERE OL_W_ID = $1 AND OL_D_ID = $2 AND OL_O_ID < $3 AND OL_O_ID >= $4 AND S_W_ID = $5 AND S_I_ID = OL_I_ID AND S_QUANTITY < $6
SELECT C_DATA FROM customer WHERE C_W_ID = $1 AND C_D_ID = $2 AND C_ID = $3
SELECT C_DISCOUNT, C_LAST, C_CREDIT FROM customer WHERE C_W_ID = $1 AND C_D_ID = $2 AND C_ID = $3
SELECT C_FIRST, C_MIDDLE, C_ID, C_STREET_1, C_STREET_2, C_CITY, C_STATE, C_ZIP, C_PHONE, C_CREDIT, C_CREDIT_LIM, C_DISCOUNT, C_BALANCE, C_YTD_PAYMENT, C_PAYMENT_CNT, C_SINCE FROM customer WHERE C_W_ID = $1 AND C_D_ID = $2 AND C_LAST = $3 ORDER BY C_FIRST
SELECT C_FIRST, C_MIDDLE, C_LAST, C_STREET_1, C_STREET_2, C_CITY, C_STATE, C_ZIP, C_PHONE, C_CREDIT, C_CREDIT_LIM, C_DISCOUNT, C_BALANCE, C_YTD_PAYMENT, C_PAYMENT_CNT, C_SINCE FROM customer WHERE C_W_ID = $1 AND C_D_ID = $2 AND C_ID = $3
SELECT D_NEXT_O_ID FROM district WHERE D_W_ID = $1 AND D_ID = $2
SELECT D_NEXT_O_ID, D_TAX FROM district WHERE D_W_ID = $1 AND D_ID = $2 FOR UPDATE
SELECT D_STREET_1, D_STREET_2, D_CITY, D_STATE, D_ZIP, D_NAME FROM district WHERE D_W_ID = $1 AND D_ID = $2
SELECT I_PRICE, I_NAME , I_DATA FROM item WHERE I_ID = $1
SELECT NO_O_ID FROM new_order WHERE NO_D_ID = $1 AND NO_W_ID = $2 ORDER BY NO_O_ID ASC LIMIT $3
SELECT OL_I_ID, OL_SUPPLY_W_ID, OL_QUANTITY, OL_AMOUNT, OL_DELIVERY_D FROM order_line WHERE OL_O_ID = $1 AND OL_D_ID = $2 AND OL_W_ID = $3
SELECT O_C_ID FROM oorder WHERE O_ID = $1 AND O_D_ID = $2 AND O_W_ID = $3
SELECT O_ID, O_CARRIER_ID, O_ENTRY_D FROM oorder WHERE O_W_ID = $1 AND O_D_ID = $2 AND O_C_ID = $3 ORDER BY O_ID DESC LIMIT $4
SELECT SUM(OL_AMOUNT) AS OL_TOTAL FROM order_line WHERE OL_O_ID = $1 AND OL_D_ID = $2 AND OL_W_ID = $3
SELECT S_QUANTITY, S_DATA, S_DIST_01, S_DIST_02, S_DIST_03, S_DIST_04, S_DIST_05, S_DIST_06, S_DIST_07, S_DIST_08, S_DIST_09, S_DIST_10 FROM stock WHERE S_I_ID = $1 AND S_W_ID = $2 FOR UPDATE
SELECT W_STREET_1, W_STREET_2, W_CITY, W_STATE, W_ZIP, W_NAME FROM warehouse WHERE W_ID = $1
SELECT W_TAX FROM warehouse WHERE W_ID = $1
SELECT version()
UPDATE customer SET C_BALANCE = $1, C_YTD_PAYMENT = $2, C_PAYMENT_CNT = $3 WHERE C_W_ID = $4 AND C_D_ID = $5 AND C_ID = $6
UPDATE customer SET C_BALANCE = $1, C_YTD_PAYMENT = $2, C_PAYMENT_CNT = $3, C_DATA = $4 WHERE C_W_ID = $5 AND C_D_ID = $6 AND C_ID = $7
UPDATE customer SET C_BALANCE = C_BALANCE + $1, C_DELIVERY_CNT = C_DELIVERY_CNT + $2 WHERE C_W_ID = $3 AND C_D_ID = $4 AND C_ID = $5
UPDATE district SET D_NEXT_O_ID = D_NEXT_O_ID + $1 WHERE D_W_ID = $2 AND D_ID = $3
UPDATE district SET D_YTD = D_YTD + $1 WHERE D_W_ID = $2 AND D_ID = $3
UPDATE oorder SET O_CARRIER_ID = $1 WHERE O_ID = $2 AND O_D_ID = $3 AND O_W_ID = $4
UPDATE order_line SET OL_DELIVERY_D = $1 WHERE OL_O_ID = $2 AND OL_D_ID = $3 AND OL_W_ID = $4
UPDATE stock SET S_QUANTITY = $1 , S_YTD = S_YTD + $2, S_ORDER_CNT = S_ORDER_CNT + $3, S_REMOTE_CNT = S_REMOTE_CNT + $4 WHERE S_I_ID = $5 AND S_W_ID = $6
UPDATE warehouse SET W_YTD = W_YTD + $1 WHERE W_ID = $2
